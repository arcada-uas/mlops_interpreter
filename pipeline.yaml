debug:
    create_local_files: False
    limit_dataset: 250
    test_verbosity: 2

#######################################################################################
#######################################################################################

dataset:
    method: from_cassandra
    params:
        db_table: shohel.refined_stock_data
        stock_symbol: AAPL
        timestamps:
            start: '2019-01-01 00:00:00'
            end: '2019-01-10 00:00:00'

    # EXPECTED ROW SCHEMA
    expected_schema:
        symbol: str
        timestamp: str
        open: float
        close: float
        high: float
        low: float
        volume: int

#######################################################################################
#######################################################################################

features:

    # ADD STOCHASTIC K FEATURE
    -   method: stochastic_k
        params:
            window_size: 5
            output_column: sk5

    # SHIFT CLOSE COLUMN FORWARD BY 14 STEPS
    # THIS WILL BE THE TARGET COLUMN FOR MODEL TRAINING
    -   method: shift_column
        params:
            target_column: close
            shift_by: 14
            output_column: shifted_close

#######################################################################################
#######################################################################################

training:

    # WHAT COLUMNS TO USE FOR FEATURES
    feature_columns:
        - open
        - close
        - high
        - low
        - volume
        - sk5

    # WHAT COLUMN DO WE WANT TO PREDICT
    label_column: shifted_close

    # HOW SHOULD THE DATASET BE SEGMENTED?
    segmentation:
        method: standard_ttv
        params:
            segments:
                - train: 0.75
                - test: 0.15
                - validate: 0.1

    # WHAT SCALAR SHOULD WE USE?
    scaler:
        method: standard_scaler
        params:
            use_std: True
            use_mean: True

    # WHAT MODEL SHOULD WE USE?
    model:
        type: classification
        method: svc
        params:
            c_param: 0.1
            kernel: linear
            probability: True

    # MODEL EVALUATION METRICS
    # AVAILABILITY IS BASED ON WHETHER THE MODEL TYPE
    # WAS SET AS REGRESSION OR CLASSIFICATION
    metrics:
        - accuracy

#######################################################################################
#######################################################################################

# trading_strategy:
    # ...